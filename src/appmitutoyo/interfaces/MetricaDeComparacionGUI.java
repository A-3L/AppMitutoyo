/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/BeanForm.java to edit this template
 */
package appmitutoyo.interfaces;

import java.beans.PropertyChangeListener;
import java.text.NumberFormat;
import javax.swing.JFormattedTextField;
import javax.swing.text.NumberFormatter;
import jguiextensible.JGuiSimple;

/**
 *
 * @author a31r1z
 */
public class MetricaDeComparacionGUI extends JGuiSimple {

    private static final long serialVersionUID = 1L;
   
    private MetricaDeComparacion metDeComp = new MetricaDeComparacion();
   
    /**
     * Creates new form MetricaComparador
     */
    public MetricaDeComparacionGUI() {
        initComponents();
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jguiMetricaComp = new jguiextensible.JGuiSimple();
        jftxErrorMax = new javax.swing.JFormattedTextField();
        jsldRangoMedida = new javax.swing.JSlider();
        lblErrorMaximo = new javax.swing.JLabel();
        lblRangoMedida = new javax.swing.JLabel();
        lblHyteresis = new javax.swing.JLabel();
        jftxHyteresis = new javax.swing.JFormattedTextField();
        jftxEscala = new javax.swing.JFormattedTextField();
        lblEscala = new javax.swing.JLabel();

        setName("Metrica Comparador"); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jguiMetricaComp.setBorder(javax.swing.BorderFactory.createTitledBorder("Metrica comparativa"));

        jftxErrorMax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxErrorMax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxErrorMax.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jftxErrorMax.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jftxErrorMaxPropertyChange(evt);
            }
        });

        jsldRangoMedida.setFont(new java.awt.Font("URW Gothic", 0, 12)); // NOI18N
        jsldRangoMedida.setMajorTickSpacing(10);
        jsldRangoMedida.setMaximum(50);
        jsldRangoMedida.setMinorTickSpacing(5);
        jsldRangoMedida.setPaintLabels(true);
        jsldRangoMedida.setPaintTicks(true);
        jsldRangoMedida.setSnapToTicks(true);
        jsldRangoMedida.setValue(25);
        jsldRangoMedida.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsldRangoMedidaStateChanged(evt);
            }
        });

        lblErrorMaximo.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblErrorMaximo.setText("Error max. permitido");

        lblRangoMedida.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblRangoMedida.setText("Rango de medida");

        lblHyteresis.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblHyteresis.setText("Hyteresis (mm)");

        jftxHyteresis.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxHyteresis.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxHyteresis.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxEscala.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxEscala.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblEscala.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblEscala.setText("Escala");

        javax.swing.GroupLayout jguiMetricaCompLayout = new javax.swing.GroupLayout(jguiMetricaComp);
        jguiMetricaComp.setLayout(jguiMetricaCompLayout);
        jguiMetricaCompLayout.setHorizontalGroup(
            jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jguiMetricaCompLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHyteresis)
                    .addComponent(lblEscala)
                    .addComponent(lblRangoMedida)
                    .addComponent(lblErrorMaximo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsldRangoMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxErrorMax, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxHyteresis, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxEscala, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jguiMetricaCompLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jftxErrorMax, jftxEscala, jftxHyteresis});

        jguiMetricaCompLayout.setVerticalGroup(
            jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jguiMetricaCompLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblRangoMedida)
                    .addComponent(jsldRangoMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblErrorMaximo)
                    .addComponent(jftxErrorMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblHyteresis)
                    .addComponent(jftxHyteresis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jguiMetricaCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblEscala)
                    .addComponent(jftxEscala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jguiMetricaCompLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jftxErrorMax, jftxEscala, jftxHyteresis});

        add(jguiMetricaComp);
    }// </editor-fold>//GEN-END:initComponents

    private void jftxErrorMaxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jftxErrorMaxPropertyChange
           
          if(jftxErrorMax.getValue() != null) {
               
               System.out.println("Notificacion ErrorMax");
               
               notificarCambio("errorMax", jftxErrorMax.getValue());              
           }     
    }//GEN-LAST:event_jftxErrorMaxPropertyChange

    private void jsldRangoMedidaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsldRangoMedidaStateChanged
       
             System.out.println("Notificacion Slide");
        
        metDeComp.setRangoDeMedida(jsldRangoMedida.getValue());
        
             System.out.println(metDeComp.getRangoDeMedida());
        
        notificarCambio("rangoMedida", jsldRangoMedida.getValue());
    }//GEN-LAST:event_jsldRangoMedidaStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JFormattedTextField jftxErrorMax;
    javax.swing.JFormattedTextField jftxEscala;
    javax.swing.JFormattedTextField jftxHyteresis;
    jguiextensible.JGuiSimple jguiMetricaComp;
    javax.swing.JSlider jsldRangoMedida;
    javax.swing.JLabel lblErrorMaximo;
    javax.swing.JLabel lblEscala;
    javax.swing.JLabel lblHyteresis;
    javax.swing.JLabel lblRangoMedida;
    // End of variables declaration//GEN-END:variables


    @Override
    protected boolean validarDatos() {
        
      if (jftxErrorMax.getValue() == null){
            
             Utilidades.mostrar("ERROR: Faltan datos en:\n "
                          + this.getName() +"-> Error maximo");
            jftxErrorMax.requestFocusInWindow();
        
            return false;
        } 
      
      if (jftxHyteresis.getValue() == null){
            
             Utilidades.mostrar("ERROR: Faltan datos en:\n "
                          + this.getName() +"-> Hyteresis");
            jftxHyteresis.requestFocusInWindow();
        
            return false;
        }
      
       if (jftxEscala.getValue() == null){
            
             Utilidades.mostrar("ERROR: Faltan datos en:\n "
                          + this.getName() +"-> Escala");
            jftxEscala.requestFocusInWindow();
        
            return false;
        }   
      
        return true;   
    }
   
    @Override
     protected void guardarDatos() {
     
         metDeComp.setErrorMaximo(Integer.valueOf(String.valueOf(jftxErrorMax.getValue())));
         metDeComp.setHyteresis(Integer.valueOf(String.valueOf(jftxHyteresis.getValue())));
         metDeComp.setEscala(Integer.valueOf(String.valueOf(jftxEscala.getValue())));
         metDeComp.setRangoDeMedida(Integer.valueOf(String.valueOf(jsldRangoMedida.getValue())));
         
         metDeComp.guardarDatos();
     }
     
    @Override
     protected void limpiarDatos() {
         
         jftxErrorMax.setValue(null);
         jftxHyteresis.setValue(null);
         jftxEscala.setValue(null);
         jsldRangoMedida.setValue(25);
         
         metDeComp.borrarDatos();
               
     }
      @Override
   protected void actualizarCambio(String id, Object value) {}
}
