/**
 * AppMitutoyo is an application to show how works the implementation of the library JGuiExtensible
 * that develops a reusable gui pattern.
 * 
 * Copyright (C) 2022 Alberto Eiriz Lopez
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 * 
*/
package mitutoyo.interfaces;

import mitutoyo.Utilidades;
import mitutoyo.data.Dimensiones;
import jguiextensible.JGuiSimple;

/**
 * This class creates a graphical interface for the data structure with the same name
 * 
 * @author a31r1z
 */
public class DimensionesGUI extends JGuiSimple {

    private static final long serialVersionUID = 1L;
   
    private final Dimensiones dimensiones= new Dimensiones();
  
   
    /**
     * Creates new form CalibreGui
     */
    public DimensionesGUI() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDimensiones = new javax.swing.JPanel();
        lblLongitud = new javax.swing.JLabel();
        lblPeso = new javax.swing.JLabel();
        lblMedida_b = new javax.swing.JLabel();
        lblMedida_d = new javax.swing.JLabel();
        lblMedida_a = new javax.swing.JLabel();
        lblMedida_c = new javax.swing.JLabel();
        lblMedida_e = new javax.swing.JLabel();
        jftxLongitud = new javax.swing.JFormattedTextField();
        jftxPeso = new javax.swing.JFormattedTextField();
        jftxMedida_b = new javax.swing.JFormattedTextField();
        jftxMedida_d = new javax.swing.JFormattedTextField();
        jftxMedida_a = new javax.swing.JFormattedTextField();
        jftxMedida_c = new javax.swing.JFormattedTextField();
        jftxMedida_e = new javax.swing.JFormattedTextField();

        setName("Dimensiones"); // NOI18N

        panelDimensiones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dimensiones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans", 1, 12))); // NOI18N
        panelDimensiones.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        panelDimensiones.setOpaque(false);

        lblLongitud.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblLongitud.setText("Longitud [mm]");

        lblPeso.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblPeso.setText("Peso [gr]");

        lblMedida_b.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedida_b.setText("b [mm]");

        lblMedida_d.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedida_d.setText("d [mm]");

        lblMedida_a.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedida_a.setText("a [mm]");

        lblMedida_c.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedida_c.setText("c [mm]");

        lblMedida_e.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedida_e.setText("e [mm]");

        jftxLongitud.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxLongitud.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxLongitud.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxPeso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxPeso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxPeso.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxMedida_b.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxMedida_b.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxMedida_b.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxMedida_d.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxMedida_d.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxMedida_d.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxMedida_a.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxMedida_a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxMedida_a.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxMedida_c.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxMedida_c.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxMedida_c.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        jftxMedida_e.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxMedida_e.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxMedida_e.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout panelDimensionesLayout = new javax.swing.GroupLayout(panelDimensiones);
        panelDimensiones.setLayout(panelDimensionesLayout);
        panelDimensionesLayout.setHorizontalGroup(
            panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDimensionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDimensionesLayout.createSequentialGroup()
                        .addComponent(lblMedida_b)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxMedida_b, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblMedida_c, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxMedida_c, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDimensionesLayout.createSequentialGroup()
                        .addComponent(lblMedida_d)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxMedida_d, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblMedida_e)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxMedida_e, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDimensionesLayout.createSequentialGroup()
                        .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDimensionesLayout.createSequentialGroup()
                                .addComponent(lblLongitud)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jftxLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDimensionesLayout.createSequentialGroup()
                                .addComponent(lblPeso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jftxPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblMedida_a, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxMedida_a, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDimensionesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblMedida_a, lblMedida_c, lblMedida_e});

        panelDimensionesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblLongitud, lblMedida_b, lblMedida_d, lblPeso});

        panelDimensionesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jftxLongitud, jftxMedida_a, jftxMedida_b, jftxMedida_c, jftxMedida_d, jftxMedida_e, jftxPeso});

        panelDimensionesLayout.setVerticalGroup(
            panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDimensionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblLongitud)
                    .addComponent(jftxLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblPeso)
                    .addComponent(jftxPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedida_a)
                    .addComponent(jftxMedida_a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMedida_b)
                    .addComponent(jftxMedida_b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedida_c)
                    .addComponent(jftxMedida_c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelDimensionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMedida_d)
                    .addComponent(jftxMedida_d, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMedida_e)
                    .addComponent(jftxMedida_e, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelDimensiones);

        getAccessibleContext().setAccessibleName("Dimensiones");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField jftxLongitud;
    private javax.swing.JFormattedTextField jftxMedida_a;
    private javax.swing.JFormattedTextField jftxMedida_b;
    private javax.swing.JFormattedTextField jftxMedida_c;
    private javax.swing.JFormattedTextField jftxMedida_d;
    private javax.swing.JFormattedTextField jftxMedida_e;
    private javax.swing.JFormattedTextField jftxPeso;
    private javax.swing.JLabel lblLongitud;
    private javax.swing.JLabel lblMedida_a;
    private javax.swing.JLabel lblMedida_b;
    private javax.swing.JLabel lblMedida_c;
    private javax.swing.JLabel lblMedida_d;
    private javax.swing.JLabel lblMedida_e;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JPanel panelDimensiones;
    // End of variables declaration//GEN-END:variables

    /**
     * Validates the data inserted in the diferent widgets of the gui
     * 
     * @return true of false if data inserted in the fields are valid
     */
    @Override
    protected boolean validateData() {
            
        return   
                Utilidades.matcher(jftxLongitud, "Longitud",500,10,this) &&
                Utilidades.matcher(jftxPeso, "Peso",this) &&
                Utilidades.matcher(jftxMedida_a, "Medida_a",this) &&
                Utilidades.matcher(jftxMedida_b, "Medida_b",this) &&
                Utilidades.matcher(jftxMedida_c, "Medida_c",this) &&
                Utilidades.matcher(jftxMedida_d, "Medida_d",this) &&
                Utilidades.matcher(jftxMedida_e, "Medida_e",this);     
   }
    
    /**
     * Saves the data inserted in the gui
     */
    @Override
    protected void saveData() {
  
       dimensiones.setLongitud(Integer.valueOf(String.valueOf(jftxLongitud.getValue())));
       dimensiones.setMedida_a(Integer.valueOf(String.valueOf(jftxMedida_a.getValue())));
       dimensiones.setMedida_b(Integer.valueOf(String.valueOf(jftxMedida_b.getValue())));
       dimensiones.setMedida_c(Integer.valueOf(String.valueOf(jftxMedida_c.getValue())));
       dimensiones.setMedida_d(Integer.valueOf(String.valueOf(jftxMedida_d.getValue())));
       dimensiones.setMedida_e(Integer.valueOf(String.valueOf(jftxMedida_e.getValue())));
       dimensiones.setPeso(Integer.valueOf(String.valueOf(jftxPeso.getValue())));
  
       dimensiones.guardarDatos();
  }
  
    /**
     * Cleans the data inserted in the widgets of the gui
     */
    @Override
  protected void cleanData() {
  
       jftxLongitud.setValue(null);           
       jftxPeso.setValue(null);
       jftxMedida_a.setValue(null);
       jftxMedida_b.setValue(null);
       jftxMedida_c.setValue(null);
       jftxMedida_d.setValue(null);
       jftxMedida_e.setValue(null);
            
       dimensiones.borrarDatos();
      
  }
  
  /**
     * Updates the value of diferent widgets notified by other component whose name is id.
     * 
     * @param id name of the component that notifies a change in his value
     * @param value value that changes
     */
    @Override
     protected void updateChanges(String id, Object value) {}


}
