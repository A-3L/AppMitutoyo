/**
 * AppMitutoyo is an application to show how works the implementation of the library JGuiExtensible
 * that develops a reusable gui pattern.
 * 
 * Copyright (C) 2022 Alberto Eiriz Lopez
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 * 
*/
package mitutoyo.interfaces;

import mitutoyo.Utilidades;
import mitutoyo.data.Certificados;

/**
 * This class creates a graphical interface for the data structure with the same name
 * 
 * @author a31r1z
 */
public class CertificadosGUI extends jguiextensible.JGuiSimple {

    private static final long serialVersionUID = 1L;

    private final Certificados cert= new Certificados();
    /**
     * Creates new CertificadosGUIform JGuiSimple
     */
    public CertificadosGUI() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGuiSimple1 = new jguiextensible.JGuiSimple();
        lblGrado = new javax.swing.JLabel();
        jbxGrado = new javax.swing.JComboBox<>();
        lblTipoInspeccion = new javax.swing.JLabel();
        jbxTipoInspeccion = new javax.swing.JComboBox<>();
        jchbxInspeccionado = new javax.swing.JCheckBox();
        lblSufijo = new javax.swing.JLabel();
        jftxtSufijo = new javax.swing.JFormattedTextField();
        jGuiSimple2 = new jguiextensible.JGuiSimple();
        lblTipoCalibracion = new javax.swing.JLabel();
        jbxTipoCalibracion = new javax.swing.JComboBox<>();
        jGuiSimple3 = new jguiextensible.JGuiSimple();
        lblMedidaPatron = new javax.swing.JLabel();
        jftxtMedidaPatron = new javax.swing.JFormattedTextField();
        lblDesviacion = new javax.swing.JLabel();
        jftxtDesviacion = new javax.swing.JFormattedTextField();
        lblAnguloHz = new javax.swing.JLabel();
        jftxtAnguloHz = new javax.swing.JFormattedTextField();
        lblAnguloV = new javax.swing.JLabel();
        jftxtAnguloV = new javax.swing.JFormattedTextField();
        lblIntervalo = new javax.swing.JLabel();
        jftxtIntervalo = new javax.swing.JFormattedTextField();
        lblNumId = new javax.swing.JLabel();
        jftxtNumId = new javax.swing.JFormattedTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Certificados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans", 1, 12))); // NOI18N
        setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        setName("Certificados"); // NOI18N

        jGuiSimple1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inspeccion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans", 1, 12))); // NOI18N
        jGuiSimple1.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jGuiSimple1.setName("Inspeccion"); // NOI18N

        lblGrado.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblGrado.setText("Grado");

        jbxGrado.setFont(new java.awt.Font("URW Gothic", 1, 11)); // NOI18N
        jbxGrado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-seleccione-", "K", "0", "1", "2" }));

        lblTipoInspeccion.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblTipoInspeccion.setText("Tipo");

        jbxTipoInspeccion.setFont(new java.awt.Font("URW Gothic", 1, 11)); // NOI18N
        jbxTipoInspeccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-seleccione-", "ISO", "DIN", "JIS" }));

        jchbxInspeccionado.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jchbxInspeccionado.setText("Inspeccionado");

        lblSufijo.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblSufijo.setText("Sufijo nÂº");

        jftxtSufijo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtSufijo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtSufijo.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout jGuiSimple1Layout = new javax.swing.GroupLayout(jGuiSimple1);
        jGuiSimple1.setLayout(jGuiSimple1Layout);
        jGuiSimple1Layout.setHorizontalGroup(
            jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGuiSimple1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTipoInspeccion)
                    .addComponent(lblGrado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jGuiSimple1Layout.createSequentialGroup()
                        .addComponent(jbxTipoInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(lblSufijo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxtSufijo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jGuiSimple1Layout.createSequentialGroup()
                        .addComponent(jbxGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jchbxInspeccionado)))
                .addContainerGap())
        );
        jGuiSimple1Layout.setVerticalGroup(
            jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGuiSimple1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTipoInspeccion)
                    .addComponent(jbxTipoInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSufijo)
                    .addComponent(jftxtSufijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbxGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGuiSimple1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jchbxInspeccionado))
        );

        jGuiSimple2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calibracion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans", 1, 12))); // NOI18N
        jGuiSimple2.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jGuiSimple2.setName("Calibracion"); // NOI18N

        lblTipoCalibracion.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblTipoCalibracion.setText("Tipo");

        jbxTipoCalibracion.setFont(new java.awt.Font("URW Gothic", 1, 11)); // NOI18N
        jbxTipoCalibracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-seleccione-", "JCSS", "DAkkS", "COFRAC", "RVA", "UKAS" }));

        jGuiSimple3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rangos de Error", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Bitstream Vera Sans", 1, 12))); // NOI18N
        jGuiSimple3.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        jGuiSimple3.setName("Rangos de Error"); // NOI18N

        lblMedidaPatron.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblMedidaPatron.setText("Medida Patron");

        jftxtMedidaPatron.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtMedidaPatron.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtMedidaPatron.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        lblDesviacion.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblDesviacion.setText("Desviacion");

        jftxtDesviacion.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtDesviacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtDesviacion.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        lblAnguloHz.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblAnguloHz.setText("Angulo HZ");

        jftxtAnguloHz.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtAnguloHz.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtAnguloHz.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        lblAnguloV.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblAnguloV.setText("Angulo V");

        jftxtAnguloV.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtAnguloV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtAnguloV.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        lblIntervalo.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblIntervalo.setText("Intervalo");

        jftxtIntervalo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtIntervalo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtIntervalo.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout jGuiSimple3Layout = new javax.swing.GroupLayout(jGuiSimple3);
        jGuiSimple3.setLayout(jGuiSimple3Layout);
        jGuiSimple3Layout.setHorizontalGroup(
            jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGuiSimple3Layout.createSequentialGroup()
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMedidaPatron)
                    .addComponent(lblDesviacion))
                .addGap(18, 33, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftxtDesviacion, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxtMedidaPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIntervalo)
                    .addComponent(lblAnguloHz)
                    .addComponent(lblAnguloV))
                .addGap(18, 33, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftxtIntervalo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxtAnguloHz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftxtAnguloV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jGuiSimple3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jftxtAnguloHz, jftxtAnguloV, jftxtIntervalo});

        jGuiSimple3Layout.setVerticalGroup(
            jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGuiSimple3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblIntervalo)
                    .addComponent(jftxtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblAnguloHz)
                    .addComponent(jftxtAnguloHz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnguloV)
                    .addComponent(jftxtAnguloV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
            .addGroup(jGuiSimple3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jGuiSimple3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jGuiSimple3Layout.createSequentialGroup()
                        .addComponent(lblMedidaPatron)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDesviacion))
                    .addGroup(jGuiSimple3Layout.createSequentialGroup()
                        .addComponent(jftxtMedidaPatron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxtDesviacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNumId.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N
        lblNumId.setText("Num. Id");

        jftxtNumId.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jftxtNumId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jftxtNumId.setFont(new java.awt.Font("URW Gothic", 0, 13)); // NOI18N

        javax.swing.GroupLayout jGuiSimple2Layout = new javax.swing.GroupLayout(jGuiSimple2);
        jGuiSimple2.setLayout(jGuiSimple2Layout);
        jGuiSimple2Layout.setHorizontalGroup(
            jGuiSimple2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGuiSimple2Layout.createSequentialGroup()
                .addGroup(jGuiSimple2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jGuiSimple3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jGuiSimple2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTipoCalibracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbxTipoCalibracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNumId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jftxtNumId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addGap(2, 2, 2))
        );
        jGuiSimple2Layout.setVerticalGroup(
            jGuiSimple2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGuiSimple2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jGuiSimple2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbxTipoCalibracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoCalibracion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jGuiSimple2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jGuiSimple2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jftxtNumId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumId))
                .addGap(18, 18, 18)
                .addComponent(jGuiSimple3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jGuiSimple1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jGuiSimple2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jGuiSimple1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jGuiSimple2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jguiextensible.JGuiSimple jGuiSimple1;
    private jguiextensible.JGuiSimple jGuiSimple2;
    private jguiextensible.JGuiSimple jGuiSimple3;
    private javax.swing.JComboBox<String> jbxGrado;
    private javax.swing.JComboBox<String> jbxTipoCalibracion;
    private javax.swing.JComboBox<String> jbxTipoInspeccion;
    private javax.swing.JCheckBox jchbxInspeccionado;
    private javax.swing.JFormattedTextField jftxtAnguloHz;
    private javax.swing.JFormattedTextField jftxtAnguloV;
    private javax.swing.JFormattedTextField jftxtDesviacion;
    private javax.swing.JFormattedTextField jftxtIntervalo;
    private javax.swing.JFormattedTextField jftxtMedidaPatron;
    private javax.swing.JFormattedTextField jftxtNumId;
    private javax.swing.JFormattedTextField jftxtSufijo;
    private javax.swing.JLabel lblAnguloHz;
    private javax.swing.JLabel lblAnguloV;
    private javax.swing.JLabel lblDesviacion;
    private javax.swing.JLabel lblGrado;
    private javax.swing.JLabel lblIntervalo;
    private javax.swing.JLabel lblMedidaPatron;
    private javax.swing.JLabel lblNumId;
    private javax.swing.JLabel lblSufijo;
    private javax.swing.JLabel lblTipoCalibracion;
    private javax.swing.JLabel lblTipoInspeccion;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Validates the data inserted in the diferent widgets of the gui
     * 
     * @return true of false if data inserted in the fields are valid
     */
    @Override
   protected boolean validateData() {    
        
       return 
               
              Utilidades.matcher(jbxTipoInspeccion, "Tipo Inspeccion", this)
                && Utilidades.matcher(jbxGrado, "Grado", this)
                && Utilidades.matcher(jftxtSufijo, "Sufijo", this)
                && Utilidades.matcher(jbxTipoCalibracion, "Tipo Calibracion", this)
                && Utilidades.matcher(jftxtNumId, "Num Id", this)
                && Utilidades.matcher(jftxtMedidaPatron, "Medida Patron", this)
                && Utilidades.matcher(jftxtDesviacion, "Desviacion", this)
                && Utilidades.matcher(jftxtIntervalo, "Intervalo", this)
                && Utilidades.matcher(jftxtAnguloHz, "Angulo Hz", this)
                && Utilidades.matcher(jftxtAnguloV, "Angulo V", this);
   
       
    }

    /**
     * Saves the data inserted in the gui
     */
    @Override
    protected void saveData() {
        
        cert.setTipoInspeccion(String.valueOf(jbxTipoInspeccion.getSelectedItem()));
        cert.setGrado(String.valueOf(jbxGrado.getSelectedItem()));
        cert.setSufijo(Integer.valueOf(String.valueOf(jftxtSufijo.getValue())));
        cert.setTipoCalibracion(String.valueOf(jbxTipoCalibracion.getSelectedItem()));
        cert.setNumId(Integer.valueOf(String.valueOf(jftxtNumId.getValue())));
        cert.setMedidaPatron(Integer.valueOf(String.valueOf(jftxtMedidaPatron.getValue())));
        cert.setDesviacion(Integer.valueOf(String.valueOf(jftxtDesviacion.getValue())));
        cert.setIntervalo(Integer.valueOf(String.valueOf(jftxtIntervalo.getValue())));
        cert.setAnguloHz(Integer.valueOf(String.valueOf(jftxtAnguloHz.getValue())));
        cert.setAnguloV(Integer.valueOf(String.valueOf(jftxtAnguloV.getValue())));
        cert.setInspeccionado(jchbxInspeccionado.isSelected());
         
        cert.guardarDatos();
    }

    /**
     * Cleans the data inserted in the widgets of the gui
     */
    @Override
    protected void cleanData() {
        jbxTipoInspeccion.setSelectedIndex(0);
        jbxGrado.setSelectedIndex(0);
        jftxtSufijo.setValue(null);
        jbxTipoCalibracion.setSelectedIndex(0);
        jftxtNumId.setValue(null);
        jftxtMedidaPatron.setValue(null);
        jftxtDesviacion.setValue(null);
        jftxtIntervalo.setValue(null);
        jftxtAnguloHz.setValue(null);
        jftxtAnguloV.setValue(null);
        jchbxInspeccionado.setSelected(false);
        
        cert.borrarDatos();
    }

    /**
     * Updates the value of diferent widgets notified by other component whose name is id.
     * 
     * @param id name of the component that notifies a change in his value
     * @param value value that changes
     */
    @Override
    protected void updateChanges(String id, Object value) {
         switch(id) {
            case "rangoMedida" -> { jftxtDesviacion.setValue(value); jftxtAnguloV.setValue(value);}
         }
    }
    
}

