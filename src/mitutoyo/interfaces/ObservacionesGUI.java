/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Other/Simple.java to edit this template
 */
package mitutoyo.interfaces;

import mitutoyo.data.Observaciones;

/**
 *
 * @author a31r1z
 */
public class ObservacionesGUI extends jguiextensible.JGuiSimple {

    private Observaciones obs = new Observaciones();
    
    /**
     * Creates new Observacionesform JGuiSimple
     */
    public ObservacionesGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Observaciones"));
        jTextArea1.setMinimumSize(new java.awt.Dimension(100, 400));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    @Override
    protected boolean validateData() {        
        
       return true;
    }

    @Override
    protected void saveData() {
           
       if (jTextArea1.getText()!=null) obs.setText(jTextArea1.getText());
    }

    @Override
    protected void cleanData() {
        
       obs.borrarDatos();
    }

    @Override
    protected void updateChanges(String id, Object value) {}
        
 
}
